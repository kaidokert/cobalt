name: Build Cobalt
description: Builds Cobalt targets
inputs:
  targets:
    description: "List of ninja targets for Cobalt build."
    required: true
  test_root_target:
    description: "The root target from which to deduce what tests to run."
    required: true
  upload_on_host_test_artifacts:
    description: "Indicates if on-host test artifacts should be uploaded."
    required: true
  upload_on_device_test_artifacts:
    description: "Indicates if on-device test artifacts should be uploaded."
    required: true
  test_artifacts_key:
    description: "Artifact key used to store on-host test artifacts."
    required: true
runs:
  using: "composite"
  steps:
      - name: GN gen
        run: |
          cd src
          cobalt/build/gn.py -p ${{ matrix.platform }} -C ${{ matrix.config }}
        shell: bash
      - name: List GN args
        run: |
          cd src
          gn args --list --short --overrides-only out/${{ matrix.platform }}_${{ matrix.config }}
        shell: bash
      - name: Calculate Test Targets
        # TODO(b/382508397): Replace hardcoded list with dynamically generated one.
        id: test-targets
        if: inputs.upload_on_host_test_artifacts == 'true' || inputs.upload_on_device_test_artifacts == 'true'
        env:
          TEST_TARGETS_JSON_FILE: cobalt/build/testing/targets/${{ matrix.platform }}/test_targets.json
        run: |
          set -ex
          cd src
          echo "test_targets=$(cat ${TEST_TARGETS_JSON_FILE} | jq -c '.test_targets')" >> $GITHUB_OUTPUT
        shell: bash
      - name: Ninja build test targets
        if: inputs.upload_on_host_test_artifacts == 'true' || inputs.upload_on_device_test_artifacts == 'true'
        run: |
          set -ex
          cd src
          TEST_TARGETS=$(cat ${{ steps.calculate-test-targets.outputs.test_targets_json_file }} | jq -cr '.test_targets | join(" ")')
          time autoninja -C out/${{ matrix.platform }}_${{ matrix.config }} ${TEST_TARGETS}
        shell: bash
      - name: Ninja build
        env:
          TARGETS: ${{ inputs.targets }}
        run: |
          set -ex
          cd src
          time autoninja -C out/${{ matrix.platform }}_${{ matrix.config }} ${TARGETS}
        shell: bash
      - name: Archive Android APKs
        if: startsWith(matrix.platform, 'android') && matrix.config == 'qa'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }} APKs
          path: |
            src/out/${{ matrix.platform }}_qa/apks/*.apk
            src/out/${{ matrix.platform }}_qa/*_apk/*.apk
            src/out/${{ matrix.platform }}_qa/gen/build_info.json
      - name: Upload Test Artifacts
        if: steps.build-test-targets.outcome == 'success'
        uses: ./src/.github/actions/upload_test_artifacts
        with:
          test_artifacts_key: ${{ inputs.test_artifacts_key }}
          upload_on_host_test_artifacts: ${{ inputs.upload_on_host_test_artifacts }}
          upload_on_device_test_artifacts: ${{ inputs.upload_on_device_test_artifacts }}
          test_targets_json_file: '${{ steps.calculate-test-targets.outputs.test_targets_json_file }}'
outputs:
  test_targets_count:
    description: The number of test targets build.
    value: ${{ steps.calculate-test-targets.outputs.test_targets_count || 0 }}
  test_targets_json:
    description: The test targets in a JSON array.
    value: ${{ steps.calculate-test-targets.outputs.test_targets_json }}
  test_targets_json_file:
    description: The generated test targets json file path.
    value: ${{ steps.calculate-test-targets.outputs.test_targets_json_file }}
